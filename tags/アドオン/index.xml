<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>アドオン on the Right Stuff</title>
    <link>http://rs.luminousspice.com/tags/%E3%82%A2%E3%83%89%E3%82%AA%E3%83%B3/</link>
    <description>アドオン | the Right Stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 14 Apr 2014 05:00:17 +0900</lastBuildDate>
    <atom:link href="https://pubsubhubbub.superfeedr.com" rel="hub"/>
    <atom:link href="https://pubsubhubbub.appspot.com/" rel="hub"/>
    <atom:link href="/tags/%E3%82%A2%E3%83%89%E3%82%AA%E3%83%B3/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Anki 2.1.x アドオンの作成 日本語訳</title>
      <link>http://rs.luminousspice.com/ankiaddons21/</link>
      <pubDate>Sun, 27 Aug 2017 11:48:38 +0900</pubDate>
      <guid>http://rs.luminousspice.com/ankiaddons21/</guid>
      <description>Writing Anki 2.1.x Add-ons  の日本語訳。簡単なサンプルを使ったアドオン作成の概要、データベースアクセスの方法、フックを使った既存コードのカスタマイズ、デバッグ、v 2.0 からの移植、アドオンの共有方法について説明しています。</description>
      <content>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Writing Anki 2.0.x Add-ons  の日本語訳。簡単なサンプルを使ったアドオン作成の概要、データベースアクセスの方法、フックを使った既存コードのカスタマイズ、デバッグ、v 2.0 からの移植、アドオンの共有方法について説明しています。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_日本語版をご覧いただく前に&#34;&gt;日本語版をご覧いただく前に&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;この文書は、&lt;a href=&#34;http://ankisrs.net/docs/addons21.html&#34;&gt;Writing Anki 2.1.x Add-ons&lt;/a&gt; 2017-08-28 版の日本語訳です。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki 2.1.x は 2017 年 8 月 28 日現在、最新バージョンは 2.1 Beta 14 です。より最新で正確な情報をご覧になりたい方は、原本をご覧ください。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;また、&lt;a href=&#34;http://rs.luminousspice.com/anki2addons&#34;&gt;Anki 2.0.x 用の文書の日本語訳&lt;/a&gt;もご覧頂けます。&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anki_2_1_x_アドオンの作成&#34;&gt;Anki 2.1.x アドオンの作成&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_他のバージョン&#34;&gt;他のバージョン&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;この文書では、まだリリースしていませんが Anki 2.1.x 用のアドオンの作成について扱います。Anki 2.0.x 用については &lt;a href=&#34;https://apps.ankiweb.net/docs/addons.html&#34; class=&#34;bare&#34;&gt;https://apps.ankiweb.net/docs/addons.html&lt;/a&gt; をご覧ください。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_原文&#34;&gt;原文&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;英語: &lt;a href=&#34;https://apps.ankiweb.net/docs/addons21.html&#34; class=&#34;bare&#34;&gt;https://apps.ankiweb.net/docs/addons21.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_概要&#34;&gt;概要&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki は、ユーザーフレンドリーなプログラミング言語 Python で作成しています。
Python についてあまり詳しくない方は、この文書の先を読む前に
&lt;a href=&#34;http://docs.python.org/tutorial/&#34;&gt;Python tutorial&lt;/a&gt; をお読みください。
(訳注: &lt;a href=&#34;https://docs.python.org/ja/3/tutorial/&#34;&gt;Python チュートリアル
日本語版&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Python は動的言語なため、Anki ではアドオンが極めて強力に機能します。アドオンは Anki の処理
を拡張するだけでなく、Anki の任意の側面に変更を加えることができます。例えば、スケジュール
設定の処理を変更したり、ユーザーインターフェイスを修正したりすることができます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;プラグインの開発には、特別な開発環境は必要ありません。テキストエディタがあれば十分です。
Windows や Mac をお使いの方は、このサイトで提供しているパッケージ版の Anki をお使いください。これらの
プラットフォーム上でゼロから Anki を構築するための説明が入手できないためです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;メモ帳のような単純なテキストエディタでプラグインを作成できますが、シンタックスハイライト
機能 (コードの色分け) を持ったエディタを探してみると、作業がより簡単になります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki を構成する2つの要素&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&#39;anki&#39; には、「背後」で動作する全てのコードが含まれています。コレクションを開いたり、
カードを取得し、回答する処理などです。これは、Anki の GUI が使用していますが、GUI を使わず
に Anki 単語帳にアクセスするコマンドラインプログラムに含めることもできます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&#39;aqt&#39; には、Anki のユーザーインターフェイスの部分が含まれています。Anki のユーザー
インターフェイスは、PyQt 上に構築されています。PyQt とは、クロスプラットフォーム GUI
ツールキット Qt に対する Python バインディングです。PyQt は、Qt の API に密接に動作
します。Qt documentation は、特定の GUI
コンポーネントの使い方を調べたい時に、非常に役立ちます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki 2.1.x は &lt;a href=&#34;http://doc.qt.io/qt-5/index.html&#34;&gt;Qt 5.9&lt;/a&gt; を使用しています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki が起動すると、アドオンフォルダ内のモジュールを確認し、見つけたモジュールを一つづつ実行します。アドオンを実行すると、通常は既存のコードを変更したり、新しい機能を呼び出すメニュー項目を新たに追加します。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_アドオンフォルダ&#34;&gt;アドオンフォルダ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki のメインウィンドウのメニューから Tools&amp;gt;Add-ons と選ぶと、アドオンフォルダの最上位階層にアクセスできます。View Files ボタンを押すとフォルダがポップアップします。アドオンをまだ何もインストールしていない場合は、最上位のアドオンフォルダが開きます。アドオンを選択している場合は、アドオンのモジュールフォルダーが開きます。これは最上位階層の一つ下の階層になります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;アドオンフォルダの名前は、&#34;addons21&#34;　です。Anki 2.1 に対応しています。&#34;addons&#34; があるのは、以前 Anki 2.0.x を使っていたためです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;それぞれのアドオンは、アドオンフォルダの中の一つのフォルダを使います。Anki はそのフォルダの中にあるファイル &lt;code&gt;__init__.py&lt;/code&gt; を探します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;addons21/my_addon/__init__.py&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;もし &lt;code&gt;__init__.py&lt;/code&gt; がなければ、Anki はそのフォルダを無視します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;フォルダ名を決めるときには、a-z と 0-9 の範囲の文字から選ぶことおすすめします。これによって、Python モジュールシステムによる問題を避けることができます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;自分でフォルダを作るときはどんな名前でも使えますが、AnkiWeb からアドオンをダウンロードするときは、Anki はそのアドオンの ID をフォルダ名に使います。例えば次の通りです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;addons21/48927303923/__init__.py&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki はさらにフォルダに meta.json ファイルを保存して、ダウンロードした時の元のアドオン名と、アドオンの利用許可を追跡ます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_簡単なアドオンの一例&#34;&gt;簡単なアドオンの一例&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;次に示す &lt;code&gt;my_first_addon/__init__.py&lt;/code&gt; を、自分のアドオンフォルダーに追加してみてください:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;# aqt からメインウィンドウオブジェクト (mw) を読み込みます
from aqt import mw
# utils.py から &#34;show info&#34; ツールを読み込みます
from aqt.utils import showInfo
# Qt GUI ライブラリの全てを読み込みます
from aqt.qt import *

# 次のようなメニュー項目を追加してみましょう。まず最初にメニュー項目が利用可能になったら
# 呼び出す関数を作成します。

def testFunction():
    # 現在使用中のコレクションの中のカードの枚数を取得します
    # このコレクションはメインウィンドウの中に保存しています
    cardCount = mw.col.cardCount()
    # メッセージボックスを表示します
    showInfo(&#34;Card count: %d&#34; % cardCount)

# 新しいメニュー項目 &#34;test&#34; を作成します。
action = QAction(&#34;test&#34;, mw)
# この項目をクリックしたら testFunction を呼び出すように設定します。
action.triggered.connect(testFunction)
# そして、この設定をツールメニューに反映します。
mw.form.menuTools.addAction(action)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki を再起動すると、ツールメニューの中に &#39;test&#39; 項目が追加されていることに気づくでしょう。
この項目を選択して実行するとカード枚数を表示するダイアログが現れます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;プラグインの入力中に間違いがあった場合には、Anki は起動時にエラーメッセージを表示して
どこに問題があるか指摘します。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_コレクション&#34;&gt;コレクション&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;コレクションファイル上の全ての操作は、mw.col を通じてアクセスします。基本的な例で
何ができるがご紹介します。注意してほしいのは、上の例のように testFunction() の中で行ってください。
アドオンの中で直接実行することはできません。それは、Anki を起動中にアドオンが初期化し、その後にコレクションやプロファイルを
読み込むからです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;復習時期のカードの取得:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;card = mw.col.sched.getCard()
if not card:
    # 現在の単語帳は復習済み&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;カードを解答する:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;mw.col.sched.answerCard(card, ease)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;ノートを編集する (各フィールドの最後に &#34; new&#34; を追加):&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;note = card.note()
for (name, value) in note.items():
    note[name] = value + &#34; new&#34;
note.flush()&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;ノートにタグ x を持つカードの ID を取得する:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;ids = mw.col.findCards(&#34;tag:x&#34;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;指定したカード ID から質問と解答を取得する:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;for id in ids:
    card = mw.col.getCard(id)
    question = card.q()
    answer = card.a()&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;データベースの変更後にスケジュールをリセットする。GUI も更新しなければならないので、
メインウィンドウ上で reset() を呼び出すことに注意してください:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;mw.reset()&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;テキストファイルをコレクションに読み込む&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from anki.importing import TextImporter
file = u&#34;/path/to/text.txt&#34;
# 単語帳を選択
did = mw.col.decks.id(&#34;ImportDeck&#34;)
mw.col.decks.select(did)
# 単語帳にノートタイプを設定
m = mw.col.models.byName(&#34;Basic&#34;)
deck = mw.col.decks.get(did)
deck[&#39;mid&#39;] = m[&#39;id&#39;]
mw.col.decks.save(deck)
# コレクションに読み込む
ti = TextImporter(mw.col, file)
ti.initMapping()
ti.run()&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ほとんど全ての GUI 処理は &#39;anki&#39; 内に関連する関数を持っています。このため、Anki が利用
できるどんな処理でも、アドオンの中で同様に呼び出すことができます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;GUI の外側のコレクションにアクセスする場合は、次のようなコードを使います:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from anki import Collection
col = Collection(&#34;/path/to/collection.anki2&#34;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki の外部のコレクションに何らかの修正を加えたときは、修正が済んだら col.close() を必ず呼び出さなければなりません。
これを怠ると修正点は失われます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_データベース&#34;&gt;データベース&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&#39;anki&#39; がサポートしていない処理を実行する必要がある場合は、データベースに直接アクセスする
ことができます。Anki コレクションは、SQLite ファイル内に保存されています。詳しい情報は、
&lt;a href=&#34;http://www.sqlite.org/lang.html&#34;&gt;SQLite documentation&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki のデータベースオブジェクトは次のような関数をサポートしています:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;execute() は、挿入と更新処理を実行します。指定した引数は ? を一緒に使います。例えば:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;mw.col.db.execute(&#34;update cards set ivl = ? where id = ?&#34;, newIvl, cardId)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;executemany() は、更新と挿入を一括処理します。大規模な更新にはこの関数の方が、
execute() で個別にデータを処理するよりも非常に高速に処理します。例えば:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;data = [[newIvl1, cardId1], [newIvl2, cardId2]]
mw.col.db.executemany(same_sql_as_above, data)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;scalar() は、単一の項目を返します:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;showInfo(&#34;card count: %d&#34; % mw.col.db.scalar(&#34;select count() from cards&#34;))&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;list() は、各行の最初の列をリストで返します。次のコードの戻り値は [1, 2, 3]です:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;ids = mw.col.db.list(&#34;select id from cards limit 3&#34;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;all() は、各行がリストの場合、行のリストを返します:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;ids_and_ivl = mw.col.db.all(&#34;select id, ivl from cards&#34;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;execute() は、中間リストを作らずに結果の集合への処理を繰り返すのに使えます。例:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;for id, ivl in mw.col.db.execute(&#34;select id, ivl from cards limit 3&#34;):
    showInfo(&#34;card id %d has ivl %d&#34; % (id, ivl))&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;アドオンが、コレクションの中のテーブルを修正することが決してないように注意してください。
このことは、Anki 将来のバージョンで変更になる場合があります。プラグイン専用のデータを保存する
必要がある時には、衝突を避けて新しいテーブルを作るか、別のファイルにデータを保存するようにして
ください。小さい設定項目は、mw.col.conf の中に保存できますが、同期の度にコピーするため、
大規模なデータを保存しないでください。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_フック&#34;&gt;フック&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;フックをコードのわずかな箇所に追加して、アドオンの作成がもっと簡単になるようにしました。
フックは 2 種類あります。&#39;hooks&#39; は引数を取り、戻り値はありませんが、&#39;filters&#39; 引数を取り、
(おそらく何らかの修正を加えて) 値を返します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&#39;hook&#39; の簡単な例は、無駄なカード (leech) の処理の中に見つかります。スケジューラー
(anki/sched.py) が、無駄なカードを見つけると、&#39;hook&#39; を呼び出します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;runHook(&#34;leech&#34;, card)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;無駄なカードが現れた時に、特定の処理を行いたい場合、例えばそのカードを &#34;Difficult&#34;
という名前の単語帳に移動する場合、次のようなコードで実現できます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from anki.hooks import addHook
from aqt import mw

def onLeech(card):
    # スケジューラーが修正する際には、 .flush() を使わずに修正できます。
    card.did = mw.col.decks.id(&#34;Difficult&#34;)
    # カードがフィルター単語帳の中にある場合は、復習時期を元に戻して取得元の単語帳に
    # 戻さなければなりません
    card.odid = 0
    if card.odue:
        card.due = card.odue
        card.odue = 0

addHook(&#34;leech&#34;, onLeech)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;aqt/editor.py の中に &#39;filter&#39; の例があります。エディターは、入力欄からフォーカスが外れる
と &#34;editFocusLost&#34; filter を呼び出します。そして、アドオンはノートに変更を加えます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;if runFilter(
    &#34;editFocusLost&#34;, False, self.note, self.currentField):
    # ノートを更新して、スケジュールを再度読み込む
    def onUpdate():
        self.loadNote()
        self.checkValid()
    self.mw.progress.timer(100, onUpdate, False)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;このサンプルでは、それぞれの filter は 3 つの引数を受け取ります。修正フラグ、ノート、現在のフィールドです。
filter が変更を加えない場合は、修正フラグは受け取った値と同じ値を返します。
変更を加えた場合は、True を返します。このようにして、どんなアドオンでも変更を加えると
ユーザーインターフェイスは、ノートを読み込み直して、更新内容を表示します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Japanese Support アドオンは、このフックを使って別のフィールドからフィールドを自動的に生成します。
単純化したものを次に示します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;def onFocusLost(flag, n, fidx):
    from aqt import mw
    # japanese model か?
    if &#34;japanese&#34; not in n.model()[&#39;name&#39;].lower():
        return flag
    # src フィールドと dst フィールドがあるか?
    for c, name in enumerate(mw.col.models.fieldNames(n.model())):
        for f in srcFields:
            if name == f:
                src = f
                srcIdx = c
        for f in dstFields:
            if name == f:
                dst = f
    if not src or not dst:
        return flag
    # dst フィールドは入力済みか?
    if n[dst]:
        return flag
    # イベントは src フィールドで発生したか?
    if fidx != srcIdx:
        return flag
    # ソーステキストを取得
    srcTxt = mw.col.media.strip(n[src])
    if not srcTxt:
        return flag
    # 欄を更新
    try:
        n[dst] = mecab.reading(srcTxt)
    except Exception, e:
        mecab = None
        raise
    return True

addHook(&#39;editFocusLost&#39;, onFocusLost)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;filter の第一引数は、必ず返される引数です。このフォーカスを失った時の filter の中では、
引数はフラグですが、別のオブジェクトになる場合もあります。例えば、anki/collection.py
の中では、_renderQA() は、カードの表面と裏面用に生成した HTML を収容する &#34;mungeQA&#34; filter
を呼び出します。latex.py は、この filter を LaTeX タグの中のテキストを画像に変換する
のに使っています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki 2.1 では、エディタにボタンを追加するフックを追加しました。次のように使います。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from aqt.utils import showInfo
from anki.hooks import addHook

# cross out the currently selected text
def onStrike(editor):
    editor.web.eval(&#34;wrap(&#39;&amp;lt;del&amp;gt;&#39;, &#39;&amp;lt;/del&amp;gt;&#39;);&#34;)

def addMyButton(buttons, editor):
    editor._links[&#39;strike&#39;] = onStrike
    return buttons + [editor._addButton(
        &#34;iconname&#34;, # &#34;/full/path/to/icon.png&#34;,
        &#34;strike&#34;, # link name
        &#34;tooltip&#34;)]

addHook(&#34;setupEditorButtons&#34;, addMyButton)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_モンキーパッチとメソッドの隠蔽&#34;&gt;モンキーパッチとメソッドの隠蔽&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;フックを持っていない関数を修正したい場合には、カスタム版の関数で上書きすることが可能です。
このことを、「モンキーパッチ」を呼ぶことがあります&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;aqt/editor.py には、setupButtons() という関数があり、エディターの中にある太字ボタン、
斜字体ボタンのようなボタンを生成します。自分のアドオンに違ったボタンを追加することを考えて
みましょう。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;警告: Anki 2.1 は、setupButtons() をもう使用していません。このコードは、モンキーパッチがどのように動作しているか、理解するのに役立ちますが、エディタにボタンと追加するには、前の項目で説明した setupEditorButtons フックを見てください。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;一番簡単な方法は、Anki のソースコードからその関数をコピーペーストして、自分のテキストを
ボタンに追加します。そして、元の関数を上書きします。次の通りです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from aqt.editor import Editor

def mySetupButtons(self):
    &amp;lt;オリジナルからコピーペーストしたコード&amp;gt;
    &amp;lt;カスタムアドオンのコード&amp;gt;

Editor.setupButtons = mySetupButtons&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;この方法は、将来の Anki のバージョンで元のコードが更新されるような場合に、自分のアドオンも
更新する必要になる問題をはらんでいます。もっと良い方法は、オリジナルの関数を保存しておいて
自分のカスタムバージョンの中で呼び出すことです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from aqt.editor import Editor

def mySetupButtons(self):
    origSetupButtons(self)
    &amp;lt;カスタムアドオンのコード&amp;gt;

origSetupButtons = Editor.setupButtons
Editor.setupButtons = mySetupButtons&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;これはよく行われる処理なので、Anki では wrap() という関数を提供して、もう少し使いやすく
しています。実際の例をご紹介します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from anki.hooks import wrap
from aqt.editor import Editor
from aqt.utils import showInfo

def buttonPressed(self):
    showInfo(&#34;pressed &#34; + `self`)

def mySetupButtons(self):
    # - size=False は、小さいボタンは使わない
    # - lambda は、予め設定されているメソッドの代わりに関数の中で
    #    エディタインスタンスをコールバックに渡す時に必要
    self._addButton(&#34;mybutton&#34;, lambda s=self: buttonPressed(self),
                    text=&#34;PressMe&#34;, size=False)

Editor.setupButtons = wrap(Editor.setupButtons, mySetupButtons)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;既定では、wrap() は元のコードの後にカスタムコードを実行します。第3引数 &#34;before&#34; を渡すと
これを逆転できます。元のバージョンの前と後の両方で実行する必要がある場合は、次のようにします。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from anki.hooks import wrap
from aqt.editor import Editor

def mySetupButtons(self, _old):
    &amp;lt;オリジナルの前で実行するコード&amp;gt;
    ret = _old(self)
    &amp;lt;オリジナルの後で実行するコード&amp;gt;
    return ret

Editor.setupButtons = wrap(Editor.setupButtons, mySetupButtons, &#34;around&#34;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;関数の前後でコードを実行するのではなく、関数の中を修正する必要がある場合には、元のコードの
中の対象とする関数にフックを追加するのが良い方法かも知れません。このような場合には、
追加するフックについての質問をサポートサイトに投稿してください。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_qt&#34;&gt;Qt&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;概要で話したとおり、Qt documentation は 色々な GUI ウィジェットを表示する方法を学ぶのに非常に貴重な文書です。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;一つ覚えておいてほしいことは、Python ではオブジェクトはガベージコレクションされます。
次のように記述するとどうなるでしょうか。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;def myfunc():
    widget = QWidget()
    widget.show()&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;すると、この関数を終了するとすぐにウェジットは消えてしまいます。これを避けるには、
トップレベルのウェジットに既存のオブジェクトを割り当てます。次の通りです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;def myfunc():
    mw.myWidget = widget = QWidget()
    widget.show()&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Qt オブジェクトを作って、既存のオブジェクトを親とするときには、このことはあまり必要としません。それは、親オブジェクトが新規オブジェクトを参照し続けるからです。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_標準モジュール&#34;&gt;標準モジュール&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki は、このプログラムの実行に必要な標準モジュールだけを含めて提供しています。Python
の完全な複製を含んではいません。このために、Anki が含んでいない標準モジュールを使う必要が
ある場合には、自分のアドオンに同梱する必要があります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;この場合、pure Python モジュールは使えますが、numpy のような C 拡張を必要とするモジュールを同梱しても動作しません。その理由は、そのモジュールが Anki をパッケージしたアーキテクチャと一致しないためです。もし込み入ったことをするのであれば、代わりにユーザーに Python のスタンドアロンファイルをインストールしてもらう必要があります。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;configuration&#34;&gt;設定&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JSON dictionary で設定を書いた config.json ファイルを入れると、ユーザーは Anki  のアドオンマネージャから編集できるようになります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;簡単な例として、config.json に次のように記述します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;{&#34;myvar&#34;: 5}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;config.md は次のように記述します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;この文書はこのアドオンの設定用で、*markdown* フォーマットで書いています。&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;アドオンのコードには次のように記述します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from aqt import mw
config = mw.addonManager.getConfig(__name__)
print(&#34;var is&#34;, config[&#39;myvar&#39;])&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;独自の GUI に管理オプションを持っているアドオンは、config ボタンを押した時にその GUI を表示できます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;mw.addonManager.setConfigAction(__name__, myOptionsFunc)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;reviewjs&#34;&gt;Reviewer 内の Javascript&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;前のカードをフェードアウトした後にコードを実行するフックが使えるようになりました。その後次のカードをフェードインします。簡単な例を紹介します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from anki.hooks import addHook
def prepare(q):
    return q + &#34;&#34;&#34;
&amp;lt;script&amp;gt;
onUpdateHook.push(function () {
    window.scrollTo(0, 2000);
})
&amp;lt;/script&amp;gt;&#34;&#34;&#34;
addHook(&#39;prepareQuestion&#39;, prepare)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;onUpdateHook は新しいカードを DOM に配置した後に発生しますが、このカードを表示する前です。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;onShownHook はこのカードがフェードインした後に発生します。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;このフックは、質問や解答を表示するたびにリセットします。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_デバッグ&#34;&gt;デバッグ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;自分のコードから例外が発生した時には、Anki の標準例外ハンドラー (標準エラー出力に書き出さ
れるものは何でも) が補足します。デバッグ目的のために、情報を出力する必要がある場合は、
aqt.utils.showInfo を使うか、sys.stderr.write(&#34;text\n&#34;) で標準エラー出力に書き出す
必要があります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki には、REPL が含まれています。プログラムの中から &lt;a href=&#34;https://apps.ankiweb.net/docs/manual.html#debug-console&#34;&gt;shortcut key&lt;/a&gt; を押すと
ウィンドウが立ち上がります。上の欄に式や文を入力し、ctrl+return/command+return を押すと
評価します。セッション例を次に挙げます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; mw
&amp;lt;no output&amp;gt;

&amp;gt;&amp;gt;&amp;gt; print(mw)
&amp;lt;aqt.main.AnkiQt object at 0x10c0ddc20&amp;gt;

&amp;gt;&amp;gt;&amp;gt; invalidName
Traceback (most recent call last):
  File &#34;/Users/dae/Lib/anki/qt/aqt/main.py&#34;, line 933, in onDebugRet
    exec text
  File &#34;&amp;lt;string&amp;gt;&#34;, line 1, in &amp;lt;module&amp;gt;
NameError: name &#39;invalidName&#39; is not defined

&amp;gt;&amp;gt;&amp;gt; a = [a for a in dir(mw.form) if a.startswith(&#34;action&#34;)]
... print(a)
... print()
... pp(a)
[&#39;actionAbout&#39;, &#39;actionCheckMediaDatabase&#39;, ...]

[&#39;actionAbout&#39;,
 &#39;actionCheckMediaDatabase&#39;,
 &#39;actionDocumentation&#39;,
 &#39;actionDonate&#39;,
 ...]

&amp;gt;&amp;gt;&amp;gt; pp(mw.reviewer.card)
&amp;lt;anki.cards.Card object at 0x112181150&amp;gt;

&amp;gt;&amp;gt;&amp;gt; pp(card()) # mw.reviewer.card.__dict__ へのショートカット
{&#39;_note&#39;: &amp;lt;anki.notes.Note object at 0x11221da90&amp;gt;,
 &#39;_qa&#39;: [...]
 &#39;col&#39;: &amp;lt;anki.collection._Collection object at 0x1122415d0&amp;gt;,
 &#39;data&#39;: u&#39;&#39;,
 &#39;did&#39;: 1,
 &#39;due&#39;: -1,
 &#39;factor&#39;: 2350,
 &#39;flags&#39;: 0,
 &#39;id&#39;: 1307820012852L,
 [...]
}

&amp;gt;&amp;gt;&amp;gt; pp(bcard()) # ブラウザで選択したカードへのショートカット
&amp;lt;as above&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;何が評価されたか知るためには、式を明示的に出力する必要があることに注意してください。Anki では
pp() (pretty print) がスコープの中でオブジェクトの詳細を素早くダンプすることが簡単に
できるようになっています。ショートカット ctrl+shift+return は上の欄中の現在のテキストを
pp() で囲んで実行し結果を表示します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Linux を使っているかソースコードから Anki を実行している場合は、自分のスクリプトを pdb を
使ってデバッグすることも可能です。次の行を自分のコードのどこかに置けば、Anki がその場所に
達するとターミナルにデバッガーが立ち上がります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from aqt.qt import debug; debug()&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;別の方法としては、export DEBUG=1 と自分のシェルで実行すれば、補足していない例外個所で
デバッガーが立ち上がります。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_もっと詳しく学びたい場合には&#34;&gt;もっと詳しく学びたい場合には&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki のソースコードは &lt;a href=&#34;http://github.com/dae/&#34; class=&#34;bare&#34;&gt;http://github.com/dae/&lt;/a&gt; で入手できます。コレクション
オブジェクトは、anki の collection.py の中で定義されています。他に調べる価値のある
ファイルは、cards.py、notes.py、sched.py、models.py や decks.py です。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;aqt のソースコード見ることも、特定の処理のための anki の呼び出し方や GUI の詳細
を理解するのに役立ちます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;多くの GUI は、designer ファイルの中で定義されてます。Qt Designer というプログラムを
使えば .ui ファイルを開いて、GUI をブラウズすることが簡単にできます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;最後になりますが、他のアドオンが何かを実現している方法を見ることも、非常に役立ちます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_アドオンの共有&#34;&gt;アドオンの共有&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;AnkiWeb は、アドオンモジュールを収録するには .zip ファイルを要求します。フォルダー名は必要しとません。例えば、次のようなモジュールを持っているとします。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;addons21/myaddon/__init__.py
addons21/myaddon/my.data&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;この場合、zip ファイルの内容を次のようにしてください。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;__init__.py
my.data&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;フォルダー名を含めた次のような zip ファイルは、AnkiWeb は受け付けません。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;myaddon/__init__.py
myaddon/my.data&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;zip ファイルの名前は自由に付けることができます。&lt;/div&gt;
&lt;p&gt;Python は、実行するときに &lt;code&gt;__pycache__&lt;/code&gt; フォルダを自動的に作ります。zip を作る前に必ずこのフォルダを削除してください。AnkiWeb は、&lt;code&gt;__pycache__&lt;/code&gt; フォルダを含んだ .zip ファイルを受け付けないからです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;zip ファイルを作ったら &lt;a href=&#34;https://ankiweb.net/shared/addons/&#34; class=&#34;bare&#34;&gt;https://ankiweb.net/shared/addons/&lt;/a&gt; にアップロードできます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anki_2_0_アドオンの移植&#34;&gt;Anki 2.0 アドオンの移植&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_python_3&#34;&gt;Python 3&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki 2.1 は Python 3.6 以降が必須です。Python 3 を自分のマシンにインストールしたら、2to3 ツールを使って、自動的に既存のスクリプトを Python 3 のコードにフォルダ単位で変換できます。 次の通りです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;2to3-3.6 --output-dir=aqt3 -W -n aqt
mv aqt aqt-old
mv aqt3 aqt&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ほとんどの単純なコードは自動的に変換できますが、手作業で変更の必要がある箇所が残るかもしれません。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_qt5_pyqt5&#34;&gt;Qt5 / PyQt5&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;PyQt5 でシグナルとスロットをつなぐ構文が変わりました。最近の PyQt4 バージョンではこの新しい構文を同じようにサポートしていますので、Anki 2.0 と 2.1 の両方のアドオンで同じ構文を使えます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;さらに詳しい情報は次のリンクをご覧ください。
&lt;a href=&#34;http://pyqt.sourceforge.net/Docs/PyQt4/new_style_signals_slots.html&#34; class=&#34;bare&#34;&gt;http://pyqt.sourceforge.net/Docs/PyQt4/new_style_signals_slots.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;あるアドオン作者が次のツールがコードを自動的に変換するのに役立ったと報告してくれました。
&lt;a href=&#34;https://github.com/rferrazz/pyqt4topyqt5&#34; class=&#34;bare&#34;&gt;https://github.com/rferrazz/pyqt4topyqt5&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anki_2_0_との互換性&#34;&gt;Anki 2.0 との互換性&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;scheduler に手を加えているほとんどのアドオンは、わずかな変更だけで 2.1 で動作するでしょう。reviewer、browser、editor の動作を変更するアドオンはさらに多くの作業を必要とします。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;これまで単一の .py ファイルでアドオンを配布していた方は、前の「アドオンの共有」項目で紹介した方法で、改めて zip ファイルを作る必要があります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Qt モジュールは、&#39;PyQt4&#39; の代わりに &#39;PyQt5&#39; の中にあります。条件分岐で読み込むこともできますが、さらに簡単な方法は aqt.qt から読み込むことです。例えば次のようにします。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;from aqt.qt import *&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;最も困難な箇所は、サポートを停止した QtWebKit から QtWebEngine への変更です。WebView を使って単純ではない操作をしている場合は、Anki 2.1 へのコードの移植は、ある程度の作業が必要になります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ほとんどの Python 3 のコードは、Python 2 でも動作します。このため理論上は、Anki 2.0 と 2.1 の両方で動作するようにアドオンを更新することが可能です。アドオンの動作の内容によって、特別なコードを使わずに両方のバージョンで動作することができるか、別々のコードパスで実行する if 文を追加する必要があるか決まります。しかし、これは必要以上の作業になるかもしれません。そこで AnkiWeb は 2.0.x 用と 2.1.x 用のアドオンを別々のファイルでアップロードすることをサポートしました。これによって、既存のコードをコピーし、2.1 へ移植し、そして移植したファイルを別にアップロードすることがもっと簡単になります。必要に応じて 2.0.x のコードを更新し続けられますし、時間がないなら追加の更新を避けることもできます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_webview_の変更点&#34;&gt;Webview の変更点&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Qt 5 は、WebKit の代わりに Chromium ベースの WebEngine を採用しました。このため、Anki の WebView には、WebEngine を現在使用しています。そのためのノートです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;外部の Chrome インスタンスを使って WebView をデバッグできるようになりました。Anki を起動する前に環境変数 QTWEBENGINE_REMOTE_DEBUGGING を 8080 に設定して、Chrome で localhost:8080 にアクセスします。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;WebEngine は Python との通信に別の方法を使います。
AnkiWebView() は、WebView 用のラッパーで pycmd(str) 関数を提供します。この関数は Javascript の中で ankiwebview の onBridgeCmd(str) メドッドを呼び出します。 Anki の UI の reviewer.py や deckbrowser.py といった様々な場所で、これを使うために変更しなければなりませんでした。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Javascript を非同期的に評価します。このため、JS の式の結果が必要な場合は ankiwebview の evalWithCallback() を使うことができます。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;この非同期の動作の結果、editor.saveNow() はコールバックが必要になりました。アドオンがブラウザ内でアクションを実行する場合、editor.saveNow() を最初に呼んでから、コールバックの中のコードの残りを実行する必要がおそらくあるでしょう。
.onSearch() を呼ぶには、.search()/.onSearchActivated() も変更する必要があります。例えば、ブラウザの .deleteNotes() をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;setScrollPosition() のような WebKit でサポートした様々な操作は、JavaScript で実装する必要があります。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;mw.web.triggerPageAction(QWebEnginePage.Copy) のようなページの動作も非同期で、JavaScript や遅延を使って書き直す必要があります。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;WebEngine には、WebKit のような keyPressEvent() を提供していません。このため、メニューやボタンに割り当ててないショートカットを捕捉するコードは変更しなければなりませんでした。例として、reviewer.py が setStateShortcuts() を呼んでいる方法をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_reviewer_の変更点&#34;&gt;Reviewer の変更点&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki は次のカードをフェードインする前に、前のカードをフェードアウトするようになりました。このため showQuestion フックが発生した時には、DOM の中の次のカードが表示できません。適切な時に Javascript を実行するのに使える新しいフックがあります。詳しくは、&lt;a href=&#34;http://rs.luminousspice.com/ankiaddons21/#reviewjs&#34;&gt;こちら&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_アドオンの設定&#34;&gt;アドオンの設定&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;多くの小さな 2.0 用のアドオンは、ユーザーがソースコードを編集してカスタマイズすることを必要としていました。2.1 では、これはもう良いアイデアではありません。ユーザーの変更が、更新の確認やダウンロードで上書きされるからです。2.1 では &lt;a href=&#34;http://rs.luminousspice.com/ankiaddons21/#configuration&#34;&gt;設定&lt;/a&gt; システムを導入して、このような場合に対応するようになりました。2.0 も同様にサポートする必要がある場合には、次のようなコードが使えるでしょう。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;if getattr(mw.addonsManager, &#34;getConfig&#34;, None):
    config = mw.addonManager.getConfig(__name__)
else:
    config = dict(optionA=123, optionB=456)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_日本語版訳注&#34;&gt;日本語版訳注&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki 2.1 Beta の更新履歴を知るには、&lt;a href=&#34;https://apps.ankiweb.net/docs/beta.html&#34;&gt;Anki 2.1 Beta&lt;/a&gt; が役立ちます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki 2.1 Beta 13 現在、Anki に同梱している Python のバージョンは &lt;code&gt;3.6.1&lt;/code&gt; です。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_日本語版更新履歴&#34;&gt;日本語版更新履歴&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2017/08/27 Anki 2.1 Beta 13 準拠 (2017/08/26版) 初出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017/08/29 Anki 2.1 Beta 14 準拠 (2017/08/28版)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    </item>
    
    <item>
      <title>Anki における新規カード一分間トラップの分析</title>
      <link>http://rs.luminousspice.com/1min-trap-in-anki-learning/</link>
      <pubDate>Mon, 23 May 2016 13:14:21 +0900</pubDate>
      <guid>http://rs.luminousspice.com/1min-trap-in-anki-learning/</guid>
      <description>Anki で理解が不十分なカードを新規追加すると復習間隔が一分間で連続出題する状態から抜け出せなくなります。この一分間トラップを使って新規学習を評価する方法を紹介したいと思います。</description>
      <content>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki で理解が不十分なカードを新規追加すると復習間隔が一分間で連続出題する状態から抜け出せなくなります。この一分間トラップを使って新規学習を評価する方法を紹介したいと思います。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_復習間隔一分に注目した理由&#34;&gt;復習間隔一分に注目した理由&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki の処理を変更して直前の成功した間隔からやり直しを実現するアドオン &lt;a href=&#34;https://ankiweb.net/shared/info/1481634779&#34;&gt;Another Retreat&lt;/a&gt; を公開したらある人から、このアドオンを応用して復習間隔一分のデータを取れないかとの相談を受けました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;新規カードの学習で復習間隔一分で繰り返し失敗する &#34;1min Hell&#34; の分析に使うのに必要で、最初の一歩として定量的なデータが欲しいとのことでした。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;とりあえず Anki にデータを入れて、事前に十分な理解をせずにただ見る回数だけこなせばなんとかなるだろうという、SRS から逸脱した浅はかな使い方を自ら戒めるためにアドオンを作ってみました。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_一分間隔報告アドオン&#34;&gt;一分間隔報告アドオン&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;そこでクエリーを簡単に改造して復習履歴のデータを検索し、コレクション全体について間隔一分の学習回数とその比率を単語帳別に報告するアドオンを作りました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;このアドオンは AnkiWeb に &lt;a href=&#34;https://ankiweb.net/shared/info/1353526614&#34;&gt;1min Interval Report&lt;/a&gt; として公開しています。Anki 2.1.x Beta 11 以降でも動作します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;無サポート、無責任、無保証です。
大きなサイズのコレクションの場合は報告作成まで時間がかかります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;使い方&lt;/div&gt;
&lt;p&gt;メニューバーから [ツール] - [1min Interval Report] を選択すると新規ウィンドウに報告を表示します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;表示内容&lt;/div&gt;
&lt;p&gt;左から単語帳名、一分間隔の回数、全セッション中の比率、新規セッションでの比率です。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;注目すべき数値は一番左の、新規セッション中の一分間隔の比率です。初期設定では、新規追加カードの学習ステップは 1 分と 10 分ですので、普通を二回押して終了した場合は 0%、一回もう一度、一回普通を押した場合は 50% になります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;出力例&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;1min Interval Report:

Deck	Count	% Total	% in Learn
Level1	 4618	 7.0	50.0
Level2	10569	15.0	67.0
Level31	11275	13.0	76.0
Level32	11169	15.0	75.0
Anatomy	  428	11.0	64.0
MWVB	 2801	18.0	54.0
MWDSA	　256	16.0	52.0&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_使用データの説明&#34;&gt;使用データの説明&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;実際の出力は単語帳名で並び替えますが、説明ために上からやさしい単語帳から難しいものになるように並べました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;先頭四行は同じ枚数の頻出別の単語帳です。Level31 と Level32 は同じ頻度ですがカード枚数を他の単語帳と同じにするために分けました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anatomy とは、グレコローマンを語源とする解剖学用語のカードです。カードの構成は上の頻出用語集と全く同じです。上の単語帳の Level3 と重複した語彙が多いです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MWVBとは、&lt;a href=&#34;http://rs.luminousspice.com/learn-with-anki/&#34;&gt;暗記に強くなるために Anki から上手くサポートを得るには&lt;/a&gt;で学習モデルに利用した &lt;a  href=&#34;http://www.amazon.co.jp/gp/product/0877798559/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=0877798559&amp;linkCode=as2&amp;tag=rsls-22&#34;&gt;Merriam-Webster&#39;s Vocabulary Builder&lt;/a&gt;&lt;img src=&#34;http://ir-jp.amazon-adsystem.com/e/ir?t=rsls-22&amp;l=as2&amp;o=9&amp;a=0877798559&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt; のデータです。カードにする前に十分な分量の文章を読むため、理解が進み一分間隔の学習が抑えられていることがわかります。また本文中で例文がたくさん掲載されているため、カードにも比較的長い文を掲載しています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MWDSA とは、&lt;a  href=&#34;http://www.amazon.co.jp/gp/product/0877799067/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=0877799067&amp;linkCode=as2&amp;tag=rsls-22&#34;&gt;The Merriam-Webster Dictionary of Synonyms and Antonyms&lt;/a&gt;&lt;img src=&#34;http://ir-jp.amazon-adsystem.com/e/ir?t=rsls-22&amp;l=as2&amp;o=9&amp;a=0877799067&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt; です。同時に同じ意味の言葉を大量に知ることができ、事前に例文のたくさん読むことができます。カードの作りは MWVB と同じです。この単語帳だけ追加継続中です。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_データから読めたこと&#34;&gt;データから読めたこと&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;難易度が上がるに従って、一分間隔の比率も上がっています。これは期待通りの結果ですが、定量的なデータとして確認できました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;こちらは若干驚くべきことですが、相当な難語、古語、文語であっても、事前に親本の文章を読み、そこから例文を拾ったカードを作ると、最頻出語並に一分間隔の比率を抑えることができました。今日初めて知りました。ただし Anki で学習を始めるまでに本などで時間をかけて学習することになります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;Anki のカード学習の難しさと、元の教材の難しさは必ずしも一致しない。&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://rs.luminousspice.com/addon-ease-factor-histogram/&#34;&gt;Ease Factor Histogram 単語帳の健全性を診断するアドオン&lt;/a&gt; では、易しさの値の分布を使って単語帳全体としての教材の難しさ、カードの構成の適切さを評価しました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;実は、今回作ったアドオンは Ease Factor Histogram と相補的な関係にあることに気がつきました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ease Factor Histogram は、復習の継続の困難さ評価する指標となり、このアドオン 1min Interval Report は、学習を開始する困難さを評価する指標になります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;特に 1min Interval Report は、カードを Anki で使う前に十分な準備をしたか、カードの構成は適切だったかなど新規学習を効果を高めるための視点を与えてくれます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;新規学習での間隔一分の統計を取ると、Anki の新規学習の評価ができる。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;教材の難度は一分間隔の頻度に反映される。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;教材の事前準備やカードの構成によって、新規学習の難度を下げることができる。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_更新情報&#34;&gt;更新情報&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;2016/05/23: 初出&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;2017/08/16: AnkiWeb へアドオン公開に伴い更新&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    </item>
    
    <item>
      <title>Ease Factor Histogram 単語帳の健全性を診断するアドオン</title>
      <link>http://rs.luminousspice.com/addon-ease-factor-histogram/</link>
      <pubDate>Fri, 13 May 2016 14:42:29 +0900</pubDate>
      <guid>http://rs.luminousspice.com/addon-ease-factor-histogram/</guid>
      <description>Anki の単語帳別にカードの易しさの数値の度数分布表を統計情報に追加するアドオンを作りました。カードの難しさや設問の妥当さといった単語帳の健全性の評価に役立ちます。</description>
      <content>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki の単語帳別にカードの易しさの数値の度数分布表を統計情報に追加するアドオンを作りました。カードの難しさや設問の妥当さといった単語帳の健全性の評価に役立ちます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_熟知しているのに辛い単語帳&#34;&gt;熟知しているのに辛い単語帳&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki の利用歴を重ねて、教材に慣れ復習間隔も大分開いてきたにもかかわらず、やればやるほど負担に感じることありませんか。
ある単語帳の学習履歴を紹介しましょう。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://rs.luminousspice.com/images/addon-ease-factor-reviews.png&#34; alt=&#34;再学習が際立つ単語帳&#34;&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;図 1. 再学習が際立つ単語帳&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;実はこの単語帳は熟知の比率 86%、平均復習間隔 7.1 か月です。統計情報の円グラフを見る限りでは何の問題もありません。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;以前にも増して、一度間違えたカードが中々消えてくれない点が気になる単語帳だったのです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;熟知なカードの比率が高い単語帳が、やさしい単語帳とは限らない。&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;復習間隔を決定するのは、直前の復習間隔と易しさの値、解答時の評価です。
この単語帳は [もう一回] と [普通] 以外押すことがないので、易しさの値について詳しく見ていきましょう。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_易しさの値とは&#34;&gt;易しさの値とは&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;易しさの値 (Ease Factor) は、次回の復習間隔を決定する際に、直前の復習間隔に書ける係数で初期値では 250% です。
前回から 10 日後に復習して [普通] ボタンを押すと、次は 25 日後になるのはこのような仕組みからです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;易しさの値が変化するのは、復習で [普通] ボタン以外のボタンを押した時で、[簡単] ボタンを押さない限り増えません。易しさの値というのはカードの学習履歴を数値化した指標とも言えるでしょう。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;易しさの値には下限があり 130% に設定されています。これ以下になるともはや SRS としての機能は働かなくなり普通の単語帳ソフトと変わらなくなります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ちなみに初期値 250% のカードを復習で [もう一回] を 6 回押すと、易しさの値は下限の 130% に到達します。そしてさらに二回押すと、めでたくそのカードは&lt;a href=&#34;http://rs.luminousspice.com/management_of_leeches/&#34;&gt;無駄なカードという扱いを受け保留状態&lt;/a&gt;になります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;もし易しさの値の度数分布を求めることができれば、単語帳全体の易しさや、設問の適切さの評価に使えるのではないかかと考えました。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_易しさの値の統計値を知りたい&#34;&gt;易しさの値の統計値を知りたい&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;易しさの値はカードブラウザからカード一枚一枚について調べることができますが、集団としての情報を知ることができません。そこで、単語帳単位で易しさの数値の度数分布表を表示するアドオンを作りました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;このアドオンを使って調べた上図の単語帳の易しさのデータを次に示します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://rs.luminousspice.com/images/addon-ease-factor-hard.png&#34; alt=&#34;Ease Factor Histogram 表示例&#34;&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;図 2. Ease Factor Histogram 表示例&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;復習間隔から見れば十分広がって、成熟した教材なのですが、学習負担が一向に軽くならない理由がわかりました。
一度間違えたカードが中々消えてくれないのは、易しさの値の下限に集中していることが原因だったのです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;これに対してやさしいと感じる単語帳のデータを紹介しましょう。初期値の 250 %を中心に分布しています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://rs.luminousspice.com/images/addon-ease-factor-ease.png&#34; alt=&#34;やさしい単語帳の易しさの値の分布&#34;&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;図 3. やさしい単語帳の易しさの値の分布&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;復習間隔は教材の習熟度を示す指標にはなりますが、教材の難易度や設問設定の妥当性の理解には使えません。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;やさしい単語帳も難しい単語帳も、慣れてしまえば復習間隔では見分けがつかない。&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki で学習する時のやさしさ、負担の軽さを判断するには易しさのデータが適しています。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_アドオンの入手方法&#34;&gt;アドオンの入手方法&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/494944895&#34;&gt;Ease Factor Histogram&lt;/a&gt;という名前で、AnkiWeb 上に公開しました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;アドオンのダウンロードコードは &lt;code&gt;494944895&lt;/code&gt; です。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;アドオンのインストールなどの基本情報は、&lt;a href=&#34;http://rs.luminousspice.com/how-to-use-shared-resources/&#34;&gt;Ankiの共有リソースを使ってみる&lt;/a&gt;で説明しています。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_カードを再編集する場合の注意点&#34;&gt;カードを再編集する場合の注意点&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;易しさの値が下限まで落ち込んだカードの内容を再編集しても、設定済みの易しさの値は変わりません。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;今までのカードとは連続性のないカードと割り切って新規作成すれば、また初期値の 250% から再出発することができます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ただし作業効率上、既存のデータを流用したいのではないでしょうか。
このような時にアドオン &lt;a href=&#34;https://ankiweb.net/shared/info/787914845&#34;&gt;Create Copy of Selected Cards&lt;/a&gt; が役立ちます。このアドオンを使ってカードをコピーすると、学習履歴や易しさはコピーしないしません。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create Copy of Selected Cards の簡単な使い方は、&lt;a href=&#34;http://rs.luminousspice.com/anki_reset/&#34;&gt;Ankiと初期化&lt;/a&gt;で取り上げています。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;易しさの値の統計情報は、単語帳のやさしさや、設問の適切さといった健全性の評価に使える。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;熟知なカードが多いが下限に達した易しさの値の比率が高いと、学習の負担が高くなる。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易しさの値は初期化できない。既存のカードを流用して新規作成すれば初期値から再出発できる。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    </item>
    
    <item>
      <title>Feed to Anki 毎日英単語のカードを増やせるアドオン</title>
      <link>http://rs.luminousspice.com/addon-feed-to-anki-for-wotd/</link>
      <pubDate>Sat, 30 Apr 2016 11:24:52 +0900</pubDate>
      <guid>http://rs.luminousspice.com/addon-feed-to-anki-for-wotd/</guid>
      <description>オンライン辞書サイトで毎日単語を紹介する Word of th Day (今日の言葉) の RSS フィードから Anki のカードを作るアドオンを作りました。メニューから呼び出すとカードを自動作成する単純な機能です。</description>
      <content>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;オンライン辞書サイトで毎日単語を紹介する Word of th Day (今日の言葉) の RSS フィードから Anki のカードを作るアドオンを作りました。メニューから呼び出すとカードを自動作成する単純な機能です。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;辞書サイトの&lt;a href=&#34;http://www.merriam-webster.com/wotd/feed/rss2&#34;&gt;Merriam-Webster&amp;#8217;s Word of the Day&lt;/a&gt;や&lt;a href=&#34;http://www.macmillandictionary.com/wotd/wotdrss.xml&#34;&gt;Macmillan Dictionary - Word of the Day&lt;/a&gt;の配信を毎日楽しみにしています。最新のニュースからの用例や語源の説明、新しい語彙や新しい語義を知ることができ、教材の用語集や辞書とは違った良さがあります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;気に入った項目をすぐに Anki に入力すれば良いのでしょうが、単純なコピペでもまとめてやるとずいぶん手間がかかります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;「RSS フィードを直接 Anki に読めないだろうか」という動機からこのアドオンを作りました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;このアドオンを使えば毎日一枚ずつ継続的にカードを増やすことができます。&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;負担のない復習を考えると Anki を少しずつ継続的にカードを追加していくのが理想です。しかし、少しずつ足す作業を続けるのがなかなか難しい。このような負担を大幅に圧縮できます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://rs.luminousspice.com/images/feed-to-anki-am.png&#34; alt=&#34;作成例 Merriam-Webster&amp;#8217;s Word of the Day&#34; width=&#34;300&#34;&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;図 1. 作成例 Merriam-Webster&amp;#8217;s Word of the Day&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_アドオンの入手方法&#34;&gt;アドオンの入手方法&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/1895937979&#34;&gt;Feed to Anki (for Word of the Day RSS)&lt;/a&gt;という名前で、AnkiWeb 上で公開しています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;アドオンのダウンロードコードは &lt;code&gt;1895937979&lt;/code&gt; です。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;アドオンのインストールなどの基本情報は、&lt;a href=&#34;http://rs.luminousspice.com/how-to-use-shared-resources/&#34;&gt;Ankiの共有リソースを使ってみる&lt;/a&gt;で説明しています。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_feed_to_anki_の説明&#34;&gt;Feed to Anki の説明&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;このアドオンは、メニューから呼び出と、新たに RSS を取得してカードを作成します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;既に読み込んだ項目がある場合は、無視します。繰り返し読み込んでもカードは重複しません。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;XML の要素内に直接 HTML のタグが使われている場合も、Anki のフィールド内に HTML の記述を持ち込みます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_呼び出し方&#34;&gt;呼び出し方&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;メニューバーから [ツール] – [Feed to Anki]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_ノートのフィールドと_xml_要素の対応&#34;&gt;ノートのフィールドと XML 要素の対応&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;フィードの XML 要素の内容と、Anki のカードのフィールドの対応は次の通りです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;Front: title
Back: description (RSS) or summary (Atom)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_設定方法&#34;&gt;設定方法&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ソースコードを編集すると、参照元の RSS、読み込み先の単語帳、タグを指定することができます。単語帳名やタグ名に日本語が使えます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;ソースコードエディタの開き方&lt;/div&gt;
&lt;p&gt;メニューバーから [ツール] – [アドオン] - [Feed_to_Anki] -[編集]&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;初期設定では、&#34;Oxford Learner&amp;#8217;s Dictionaries - Word of the Day&#34; と &#34;Merriam-Webster&amp;#8217;s Word of the Day&#34; を指定しています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;読み込みフィードの設定箇所&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;##### Feeds info (URL, deck, tags) #####
Feeds = [
    {&#34;URL&#34;: &#34;http://www.merriam-webster.com/wotd/feed/rss2&#34;,
     &#34;DECK&#34;: u&#34;Word of the Day::Merriam-Webster&#34;,
     &#34;tags&#34;: [u&#34;wotd&#34;,u&#34;MW&#34;]},
    {&#34;URL&#34;: &#34;http://feeds.feedburner.com/OAAD-WordOfTheDay?format=xml&#34;,
     &#34;DECK&#34;: u&#34;Word of the Day::Oxford&#34;,
     &#34;tags&#34;: [u&#34;wotd&#34;,u&#34;OAAD&#34;]},
]
########################################&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;div class=&#34;title&#34;&gt;設定項目の説明&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;URL: フィードの URL を指定&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DECK: 単語帳名を指定、サブ単語帳も可能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tags: タグを指定。複数指定可能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;タグやサブ単語帳を利用すると、複数のフィードを取り込んだ時に整理が簡単になります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://rs.luminousspice.com/images/feed-to-anki-mw.png&#34; alt=&#34;サブ単語帳を使った管理&#34;&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;図 2. サブ単語帳を使った管理&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_制限事項&#34;&gt;制限事項&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;このアドオンが作成するノートタイプ &#34;Feed_to_Anki&#34; の中のフィールドの名前と順序は変更しないでください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTPS で通信できない場合があります。URL の記述を http: に変更してお使いください。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Feed to Anki アドオンを呼び出すと RSS からカードを自動生成する&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作成済みのカードと重複作成はしない&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSS の URL の指定や、読み込み先の単語帳の指定はソースコードを編集する&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;サブ単語帳やタグを活用して整理するのがおすすめ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_もっと高度な読み込みを&#34;&gt;もっと高度な読み込みを&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;今回紹介した、Feed to Anki は RSS を読み込む単機能なアドオンですが、もっと複雑な設定をして XML や HTML を一括して読み込むためのアドオンを簡単に紹介します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/618450151&#34;&gt;FlashGrab&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;このアドオンは汎用的な XML 読み込みアドオンです。ローカルに保存した XML ファイル限定です。読み先の指定に XPath を使用するので、この分野の経験がないと敷居が高いかと。&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/2097873320&#34;&gt;HTML 2 ANKI&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;高度な設定ができる GUI を持ったウェブスクレイピングアドオンです。ローカルもネットのファイルも扱えます。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_動作確認済みフィード&#34;&gt;動作確認済みフィード&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;このアドオンを作成するのに動作確認をした英単語のフィードを紹介します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.merriam-webster.com/wotd/feed/rss2&#34;&gt;Merriam-Webster&amp;#8217;s Word of the Day&lt;/a&gt;&lt;br&gt;
Merriam-Webster&amp;#8217;s Collegiate Dictionary (メリアム＝ウェブスター大学辞典) からの 英語を母国語とする方のための内容で、用例や解説、語源まで充実しています。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.macmillandictionary.com/wotd/wotdrss.xml&#34;&gt;Macmillan Dictionary - Word of the Day&lt;/a&gt;&lt;br&gt;
マクミラン英英辞典からテーマ別に配信していて今は髪型についての言葉が続いています。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.macmillandictionary.com/potw/potwrss.xml&#34;&gt;Macmillan Dictionary - Phrase of the Week&lt;/a&gt;&lt;br&gt;
毎週配信ですが慣用句が学べます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.macmillandictionary.com/buzzword/rss.xml&#34;&gt;Macmillan Dictionary - BuzzWord&lt;/a&gt;&lt;br&gt;
IT関連の業界用語あるいは新しい語義を仕入れるのに役立ちます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://feeds.feedburner.com/OAAD-WordOfTheDay?format=xml&#34;&gt;Oxford Learner&amp;#8217;s Dictionaries - Word of the Day&lt;/a&gt;&lt;br&gt;
学習辞典 OAAD (オックスフォード現代英英辞典のアメリカ英語版) からの基本語彙ばかりですが、正確に意味が分かっているか問う作りになっています。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.oxforddictionaries.com/wordoftheday/wotdrss.xml&#34;&gt;Oxford Dictionaries Online - Word of the Day&lt;/a&gt;&lt;br&gt;
英語を母国語とする方のための ODE (オックスフォード英英辞典) からの言葉を収録しています。こちらも新しく意味を学ぶというよりも、既知の言葉を確認するための内容です。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.oed.com/rss/wordoftheday&#34;&gt;The word of the day from Oxford English Dictionary&lt;/a&gt;&lt;br&gt;
歴史的な辞書 OED (オックスフォード英語辞典) からの言葉で、歴史的な事物の名称を取り上げることが多く、学習というよりも蘊蓄が深まる内容です。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://wordsmith.org/awad/rss2.xml&#34;&gt;Wordsmith.org: This week&amp;#8217;s words&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://wordsmith.org/awad/rss1.xml&#34;&gt;Wordsmith.org: Today&amp;#8217;s Word&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.dictionary.com/wordoftheday/wotd.rss&#34;&gt;Dictionary.com Word of the Day&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_nhk_語学番組フレーズ集_rss&#34;&gt;NHK 語学番組フレーズ集 RSS&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;NHK 語学番組のフレーズ集が&lt;a href=&#34;http://gogakuru.com/rss/&#34;&gt;RSS 配信&lt;/a&gt;されています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;NHK の基礎英語やビジネス英会話を視聴中の方は、番組のテキストから Anki にコピペする作業が自動化できます。
このアドオンを活用すれば、番組の復習がもっと効果的になるのではないでしょうか。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/new_en_phrase_feed.xml&#34;&gt;英語全番組 新着フレーズ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_222_feed.xml&#34;&gt;おとなの基礎英語&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_224_feed.xml&#34;&gt;ニュースで英会話&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_227_feed.xml&#34;&gt;ラジオ英会話&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_228_feed.xml&#34;&gt;英会話タイムトライアル&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_230_feed.xml&#34;&gt;基礎英語１&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_231_feed.xml&#34;&gt;基礎英語２&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_232_feed.xml&#34;&gt;基礎英語３&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_233_feed.xml&#34;&gt;入門ビジネス英語&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gogakuru.com/rss/program_234_feed.xml&#34;&gt;実践ビジネス英語&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_更新情報&#34;&gt;更新情報&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;2016-04-30: 初出&lt;br&gt;
2016-05-10: Feed to Anki 0.3.1 の内容に合わせて更新&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    </item>
    
    <item>
      <title>Anki ユーザーのための LaTeX 利用ガイド</title>
      <link>http://rs.luminousspice.com/anki-latex-guide/</link>
      <pubDate>Thu, 14 Apr 2016 11:23:07 +0900</pubDate>
      <guid>http://rs.luminousspice.com/anki-latex-guide/</guid>
      <description>Anki のカードに数式を表示するための LaTeX の設定方法を説明します。アドオンによる LaTeX の 処理内容のカスタマイズ、TikZ による図解表現、JavaScript のライブラリ MathJax を利用した表示方法についても取り上げます。</description>
      <content>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki のカードに数式を表示するための LaTeX の設定方法を説明します。アドオンによる LaTeX の 処理内容のカスタマイズ、TikZ による図解表現、JavaScript のライブラリ MathJax を利用した表示方法についても取り上げます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anki_における_latex_処理の仕組み&#34;&gt;Anki における LaTeX 処理の仕組み&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki における LaTeX の処理をザックリ説明します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;最初にカードに LaTeX 表現が使われていると Anki 内部から PC にインストールしている LaTeX 処理系のコマンドを呼び出して、png ファイルを作成し、表示します。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;その際に、LaTeX の表現内容から SHA-1 ハッシュ値を計算し、ファイル名の一部として記録します。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;次回以降は、このハッシュ値を比較し、更新があった時には画像を作成し直します。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;画像などを保存するメディアフォルダ &lt;code&gt;(Anki フォルダ)\(プロファイル名)\collection.media&lt;/code&gt; の中に latex-(40桁の英数字).png として保存しています。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_初期設定での処理内容&#34;&gt;初期設定での処理内容&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki は、カードの中に LaTeX の表現があると次のコマンドを実行して画像化します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Anki 内部から呼び出す LaTeX 処理&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ latex -interaction=nonstopmode tmp.tex
$ dvipng -D 200 -T tight tmp.dvi -o tmp.png&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;初期設定では、&lt;code&gt;latex&lt;/code&gt; によって dvi ファイルを作り、&lt;code&gt;dvipng&lt;/code&gt; を使って png ファイルを生成しています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_latex_内容の一括画像化&#34;&gt;LaTeX 内容の一括画像化&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;複雑な表現だと画像生成に時間がかかり、学習の際に待ち時間が発生します。そのため事前に一括して画像化しておくことができます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;メニューバーから [ツール] - [メディアをチェック] を選択します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;iPhone アプリの AnkiMobile に LaTeX 表現を持ち込みたい場合も、この機能を使っておくと iPhone での数式表示ができます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_処理コマンドのカスタマイズ&#34;&gt;処理コマンドのカスタマイズ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/937148547&#34;&gt;Edit LaTeX build proces&lt;/a&gt; を使うと、Anki 内部で呼び出すコマンドをカスタマイズできます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;使い方はアドオンファイルの &lt;code&gt;Edit_LaTeX_build_process.py&lt;/code&gt; を開き、多重リスト &lt;code&gt;newLaTeX&lt;/code&gt; の内容を編集します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Anki 初期設定のコマンド&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;newLaTeX = \
[
    [&#34;latex&#34;, &#34;-interaction=nonstopmode&#34;, &#34;tmp.tex&#34;],
    [&#34;dvipng&#34;, &#34;-D&#34;, &#34;200&#34;, &#34;-T&#34;, &#34;tight&#34;, &#34;tmp.dvi&#34;, &#34;-o&#34;, &#34;tmp.png&#34;]
]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anki_のノートに_latex_を書く方法&#34;&gt;Anki のノートに LaTeX を書く方法&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;基本的な表現は、特殊なタグ &lt;code&gt;[latex]&lt;/code&gt; と &lt;code&gt;[/latex]&lt;/code&gt; の間に書きます。
&lt;code&gt;\begin{document}&lt;/code&gt; と &lt;code&gt;\end{document}&lt;/code&gt; の間に表記すべき内容を書くことができます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;その外側に指定したい内容の書き方は、後述の TikZ パッケージの導入で説明します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;なお、ノート内に LaTeX を使うタグには省略表記が使えます。&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-topbot grid-rows spread&#34;&gt;
&lt;caption class=&#34;title&#34;&gt;表 1. latex 記述タグの省略表記&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 20%;&#34;&gt;
&lt;col style=&#34;width: 80%;&#34;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;省略形&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;元の表現&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;[$] &amp;#8230;&amp;#8203; [/$]&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;[latex]\begin{math} &amp;#8230;&amp;#8203; \end{math}[/latex]&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;[$$] ... [/$$]&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;[latex]\begin{displaymath} &amp;#8230;&amp;#8203; \end{displaymath}[/latex]&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_tikz_を使う&#34;&gt;TikZ を使う&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki では、TikZ パッケージを使った図解表現を表示することもできます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://rs.luminousspice.com/images/latex-tikz.png&#34; alt=&#34;TikZ を利用したカード&#34;&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;図 1. TikZ を利用したカード&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_tikz_パッケージの導入&#34;&gt;TikZ パッケージの導入&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;TikZ パッケージを読み込むためのプリアンブル設定方法を紹介します。プリアンブルはノートタイプごとに指定できます。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;div class=&#34;title&#34;&gt;プリアンブル設定&lt;/div&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;メニューバーから [ツール] - [ノートタイプを管理]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;カードが使用しているノートタイプを選択して、[オプション] を選択&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ヘッダー欄で必要な設定項目を入力&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://rs.luminousspice.com/images/latex-option.png&#34; alt=&#34;TikZ パッケージ設定&#34;&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;図 2. TikZ パッケージ設定&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_コマンドのカスタマイズ&#34;&gt;コマンドのカスタマイズ&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki の初期状態のコマンドでは、TikZ を使用できないため、先ほどのアドオンを使って変更します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;pdflatex によって PDF ファイルを作り、その次に ImageMagick を使って PNG ファイルを生成する例を紹介します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;tikz のための設定例&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;newLaTeX = \
[
    [&#34;pdflatex&#34;, &#34;-interaction=nonstopmode&#34;, &#34;tmp.tex&#34;],
    [&#34;convert&#34;, &#34;-trim&#34;, &#34;-density&#34;, &#34;300&#34;, &#34;tmp.pdf&#34;, &#34;tmp.png&#34;]
]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anki_で_latex_を使う場合の注意点&#34;&gt;Anki で LaTeX を使う場合の注意点&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki のサポートサイトで LaTeX に関する投稿が繰り返し寄せられていますが、Anki 外の問題も多いようです。
最初に準備しておきたい項目をまとめました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Anki を使う前に、PC に使用する LaTeX システムが正しくインストールできているか確認する。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用する表現をコマンドラインを使って表示できるか事前に表示する。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;問題が発生した場合は、Anki のカード面に表示するエラーメッセージをよく読み、コマンドラインでも発生するか確認する。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_mathjax_の使い方&#34;&gt;MathJax の使い方&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;LaTeX 処理系のインストールを必要としない、JavaScritp ライブラリの &lt;a href=&#34;https://www.mathjax.org/&#34;&gt;MathJax&lt;/a&gt; を使った LaTeX の数式の表示方法を取り上げましょう。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://rs.luminousspice.com/images/latex-mathjax.png&#34; alt=&#34;MathJax 表示例&#34;&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;図 3. MathJax 表示例&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MathJax を Anki のカードで使うには、テンプレートに MathJax を呼び出すスクリプトを書き込みます。
例えば表面のテンプレートに、次のようなタグを追加します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;テンプレート記述例&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&amp;lt;script type=&#34;text/javascript&#34;
  src=&#34;http://cdn.mathjax.org/mathjax/2.5-latest/MathJax.js?config=TeX-AMS_HTML&#34;&amp;gt;
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_注意事項&#34;&gt;注意事項&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;バージョン指定&lt;/div&gt;
&lt;p&gt;私の環境では、最新の 2.6 系列は [Math Processing Error] が発生して表示できませんでしたので 2.5 を指定しています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;ローカルファイルから呼び出しについて&lt;/div&gt;
&lt;p&gt;Anki は、メディアフォルダーのサブディレクトリの呼び出しができません。&lt;code&gt;MathJax.js&lt;/code&gt; がサブディレクトリを読むことができません。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;アドオンについて&lt;/div&gt;
&lt;p&gt;以前 MathJax を使うためのアドオンが公開されていましたが、現在では削除されています。このためテンプレートに直接呼び出しスクリプトを書き込む方法を紹介しました。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_将来のバージョンについて&#34;&gt;将来のバージョンについて&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;今後リリース予定の Anki 2.1 と AnkiMobile 2.0.32 では、LaTeX に関係する機能拡張が行われる予定です。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_mathjax_の取り込み&#34;&gt;MathJax の取り込み&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anki 2.1 beta 5 で MathJax が Anki に組み込まれました。これ以後のバーションでは、MathJax を呼び出すタグをテンプレートに書き込むことが不要になります。また、AnkiMobile 2.0.32 以降のバージョンにも MathJax が取り込まれる予定です。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_svg_ファイルサポート&#34;&gt;SVG ファイルサポート&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;数式を表示するための画像フォーマットに SVG が利用できるようになります。SVG を使うには &lt;code&gt;dvisvgm&lt;/code&gt; がインストール済みであることが必要です。AnkiMobile 2.0.32 以降では、SVG ファイルのサポートをする予定ですので、同期したSVGファイルも表示できるようになります。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;この機能を使うには&lt;/div&gt;
&lt;p&gt;この機能を有効にするには、メニューバーから [Tools] - [Manage Note Types] - [Options] を開き、[Create scalable images with dvisvgm] を選択します。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;既存の PNG ファイルを一括変換&lt;/div&gt;
&lt;p&gt;この機能を有効にした後に [メディアをチェック] を実行すると、既存の PNG ファイルを SVG ファイルに置き換えます。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Anki は、内部的に LaTeX 表記を画像にして保存している。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Anki がする生成した画像は、ソースの LaTeX に変更があると作り直す。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Anki が呼び出すコマンドは、アドオンでカスタマイズ可能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LaTeX のプリアンブルは、ノートタイプごとに指定でき、パッケージの追加ができる。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MathJax は、カードテンプレートから外部共有ファイルへの参照を記述すれば可能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_参考情報&#34;&gt;参考情報&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Anki ソースファイル &lt;a href=&#34;https://github.com/dae/anki/blob/master/anki/latex.py&#34;&gt;anki/latex.py&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.opt.mist.i.u-tokyo.ac.jp/~tasuku/tikz.html&#34;&gt;BeamerのためのTikZ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://tex.stackexchange.com/questions/119349/what-preamble-does-math-stackexchange-com-use&#34;&gt;What preamble does math.stackexchange.com use?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_更新情報&#34;&gt;更新情報&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;2016/04/14: 初出&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;2017/07/29: 追加: 2.1 beta 5 における機能拡張について&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    </item>
    
  </channel>
</rss>
